Traceback (most recent call last):
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/asyncio/base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/Reho0001/opt/anaconda3/envs/yambopy-test/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

# Create instance of real space Hamiltonian in MLWF basis
hrk=HR(f'{WORK_PATH}/nscf-wannier-{NK}x{NK}x{NK}/LiF')
hrq = HR(f'{WORK_PATH}/nscf-wannier-{NQ}x{NQ}x{NQ}/LiF')
original_nnkp = NNKP_Grids(f'{WORK_PATH}/nscf-wannier-{NK}x{NK}x{NK}//LiF')

nnkp_kgrid = NNKP_Grids(f'{WORK_PATH}/nscf-wannier-{NK}x{NK}x{NK}//LiF')
nnkp_qgrid = NNKP_Grids(f'{WORK_PATH}/nscf-wannier-{NQ}x{NQ}x{NQ}//LiF')
print('start grids')
# We need all these auxiliary grids for wannierization of the BSE Hamiltonian
# nnkp_kgrid.get_kpbover2_grid(nnkp_kgrid)
nnkp_kgrid.get_wannier90toyambo(lat_k,yambo=False)
nnkp_qgrid.get_wannier90toyambo(lat_q,yambo=False)

nnkp_qgrid.get_qpb_grid(nnkp_qgrid)
nnkp_kgrid.get_kpb_grid(nnkp_kgrid)
nnkp_kgrid.get_kmq_grid(nnkp_qgrid)

------------------

----- stdout -----
Time for HR.__init__() : 0.010923147201538086 , read : 0.010354042053222656 , headstring 0.0005691051483154297
Time for HR.__init__() : 0.008512020111083984 , read : 0.008005857467651367 , headstring 0.0005061626434326172
Time for NNKP.__init__() : 0.008331060409545898
Time for NNKP.__init__() : 0.007142066955566406
Time for NNKP.__init__() : 0.007342815399169922
start grids
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[8], line 16[0m
[1;32m     14[0m nnkp_qgrid[38;5;241m.[39mget_qpb_grid(nnkp_qgrid)
[1;32m     15[0m nnkp_kgrid[38;5;241m.[39mget_kpb_grid(nnkp_kgrid)
[0;32m---> 16[0m [43mnnkp_kgrid[49m[38;5;241;43m.[39;49m[43mget_kmq_grid[49m[43m([49m[43mnnkp_qgrid[49m[43m)[49m

[0;31mTypeError[0m: NNKP_Grids.get_kmq_grid() missing 1 required positional argument: 'sign'

